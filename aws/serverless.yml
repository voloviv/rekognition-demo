service: voloviv-resources
frameworkVersion: ">=1.13.2"

custom:
  defaultStage: dev
  defaultRegion: us-east-1
  profiles:
    dev: voloviv
    production: voloviv
  network:
    VpcCIDR: 10.192.0.0/16
    PublicSubnet1CIDR: 10.192.10.0/24
    PublicSubnet2CIDR: 10.192.11.0/24
  tables:
    airbnbTokenCache: voloviv-airbnb-token-cache-${self:provider.stage}
    DDBTableNameParameter: demo-lookup-${self:provider.stage}
    ContactTableName: voloviv-contact-${self:provider.stage}
    DDBGlobalSecondaryIndexNameParameter: session-index
    DDBLocalSecondaryIndexNameParameter: month-timestamp-index

provider:
  name: aws
#  runtime: nodejs6.10
  region: ${opt:region, self:custom.defaultRegion}
  stage: ${opt:stage, self:custom.defaultStage}
  profile: ${self:custom.profiles.${self:provider.stage}}
  cfLogs: true
  versionFunctions: false
  stackTags:
    Project: voloviv.com
    Environment: ${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
      - logs:CreateLogGroup
      - logs:CreateLogStream
      - logs:PutLogEvents
      Resource: arn:aws:logs:${self:provider.region}:*:*

  DDBTableNameParameter:
    Type: String
    Default: "demo-lookup"
    Description: "Name of the DynamoDB table for persistence & querying of captured frames metadata."

  ContactTableName:
      Type: String
      Default: "voloviv-contact"
      Description: "Name of the DynamoDB table for persistence & querying of captured frames metadata."

  DDBGlobalSecondaryIndexNameParameter:
    Type: String
    Default: "processed_year_month-processed_timestamp-index"
    Description: "Name of the DDB Global Secondary Index for querying of captured frames by Web UI."

# CloudFormation Resources

resources:
  Description: "voloviv resource stack - deploys DynamoDB, S3, VPC and other resources"

  Resources:
    #
    # VPC Resources
    #
    VPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: ${self:custom.network.VpcCIDR}
        Tags:
        - Key: Name
          Value:
            Ref: AWS::StackName

    InternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
        - Key: Name
          Value:
            Ref: AWS::StackName

    InternetGatewayAttachment:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        InternetGatewayId:
          Ref: InternetGateway
        VpcId:
          Ref: VPC

    PublicSubnet1:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: VPC
        AvailabilityZone: {"Fn::Select": [ 0, {"Fn::GetAZs": ""} ]}
        CidrBlock: ${self:custom.network.PublicSubnet1CIDR}
        MapPublicIpOnLaunch: true
        Tags:
        - Key: Name
          Value: {"Fn::Join" : ["-", [{"Ref": "AWS::StackName"}, "Public-Subnet-(AZ1)" ] ]}

    PublicSubnet2:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: VPC
        AvailabilityZone: {"Fn::Select": [ 1, {"Fn::GetAZs": ""} ]}
        CidrBlock: ${self:custom.network.PublicSubnet2CIDR}
        MapPublicIpOnLaunch: true
        Tags:
        - Key: Name
          Value: {"Fn::Join" : ["-", [{"Ref": "AWS::StackName"}, "Public-Subnet-(AZ2)" ] ]}

    PublicRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId:
          Ref: VPC
        Tags:
        - Key: Name
          Value: {"Fn::Join" : ["-", [{"Ref": "AWS::StackName"}, "Public=Routes" ] ]}

    DefaultPublicRoute:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId:
          Ref: PublicRouteTable
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId:
          Ref: InternetGateway

    PublicSubnet1RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId:
          Ref: PublicRouteTable
        SubnetId:
          Ref: PublicSubnet1

    PublicSubnet2RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId:
          Ref: PublicRouteTable
        SubnetId:
          Ref: PublicSubnet2

    # DynamoDB
#    AirbnbTokenCacheTable:
#      Type: AWS::DynamoDB::Table
#      Properties:
#        TableName: ${self:custom.tables.airbnbTokenCache}
#        AttributeDefinitions:
#          - AttributeName: email
#            AttributeType: S
#        KeySchema:
#          - AttributeName: email
#            KeyType: HASH
#        ProvisionedThroughput:
#          ReadCapacityUnits: 2
#          WriteCapacityUnits: 2

    DemoLookupLogTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.tables.DDBTableNameParameter}
        KeySchema:
          - KeyType: "HASH"
            AttributeName: "processed_year_month_day"
          - KeyType: "RANGE"
            AttributeName: "request_id"
        AttributeDefinitions:
          - AttributeName: "request_id"
            AttributeType: "S"
          - AttributeName: "processed_year_month_day"
            AttributeType: "S"
          - AttributeName: "stamp"
            AttributeType: "N"
          - AttributeName: "session_id"
            AttributeType: "S"
        ProvisionedThroughput:
          WriteCapacityUnits: 2
          ReadCapacityUnits: 2
        LocalSecondaryIndexes:
          - IndexName: ${self:custom.tables.DDBLocalSecondaryIndexNameParameter}
            Projection:
              ProjectionType: "ALL"
            KeySchema:
            - KeyType: "HASH"
              AttributeName: "processed_year_month_day"
            - KeyType: "RANGE"
              AttributeName: "stamp"
        GlobalSecondaryIndexes:
          - IndexName: ${self:custom.tables.DDBGlobalSecondaryIndexNameParameter}
            Projection:
              ProjectionType: "ALL"
            ProvisionedThroughput:
              WriteCapacityUnits: 2
              ReadCapacityUnits: 2
            KeySchema:
            - KeyType: "HASH"
              AttributeName: "session_id"
            - KeyType: "RANGE"
              AttributeName: "stamp"

    ContactTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.tables.ContactTableName}
        KeySchema:
          - KeyType: "HASH"
            AttributeName: "stamp"
          - KeyType: "RANGE"
            AttributeName: "id"
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
          - AttributeName: "stamp"
            AttributeType: "N"
        ProvisionedThroughput:
          WriteCapacityUnits: 1
          ReadCapacityUnits: 1

  Outputs:
    # VPC
    VPC:
      Description: VPC ID
      Value:
        Ref: VPC
      Export:
        Name: ${self:service}-${self:provider.stage}-VPC
    PublicSubnet1:
      Description: Public Subnet 1
      Value:
        Ref: PublicSubnet1
      Export:
        Name: ${self:service}-${self:provider.stage}-PublicSubnet1
    PublicSubnet2:
      Description: Public Subnet 2
      Value:
        Ref: PublicSubnet2
      Export:
        Name: ${self:service}-${self:provider.stage}-PublicSubnet2

    # DynamoDB Tables
#    AirbnbTokenCacheTable:
#      Description: Autohost table to cache Airbnb tokens
#      Value:
#        Ref: AirbnbTokenCacheTable
#      Export:
#        Name: ${self:service}-${self:provider.stage}-AirbnbTokenCacheTable
